<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
       "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="content-type" content="text/html;charset=UTF-8" />
    <title><%=blog.name%> - <%=(yield :subtitle) || "Welcome"%></title>
    <link rel="alternate" type="application/atom+xml" title="<%=blog.name%> - ATOM" href="<%=atom_feed_url%>">
    <link rel="alternate" type="application/rss+xml" title="<%=blog.name%> - RSS" href="<%=rss_feed_url%>" />
    <%=defined?(pingback_link_tag) ? pingback_link_tag : ''%>
    <%=stylesheet_link_tag 'blog/layout'%>
    <%=stylesheet_link_tag 'blog/sidebars'%>
    <%=stylesheet_link_tag 'blog/syntax_highlighting'%>
    <%=stylesheet_link_tag 'boastful'%>
    <%=tiny_mce :editor_selector => "tiny_mce", :relative_urls => false, :remove_script_host => false%>
    <%=javascript_include_tag :defaults%>
    <%=javascript_include_tag 'jquery.min.js'%>
    <%=javascript_include_tag 'jquery.boastful.js'%>
    <%=calendar_date_select_includes "blue"%>
    <%SIDEBARS.each { |sidebar| if File.exist?(File.join(RAILS_ROOT, "public/stylesheets/blog/sidebars/#{sidebar}.css")) -%>
        <%=stylesheet_link_tag "blog/sidebars/#{sidebar}"%>
    <%end }%>
    <script>
      jQuery.noConflict();
      /* tweetbacks, w00t. Called twice to check for the omission of "www." since Topsy is just that picky. */
      jQuery(document).ready(function() {
        jQuery('#boastful').boastful({limit: 25, empty_message:""});
        if (location.href.toString().indexOf("www.") != -1)
          jQuery('#boastful2').boastful({limit: 25, location:location.href.toString().gsub("www.", ""), empty_message:""});
      });
      
      /*
         the effects used here can cause the sidebar to be positioned with +left+
         instead of +right+, which causes issues if a user resizes window afterward.
         So all we do here is recalculate the proper value for +left+ and let
         the browser do its thing.
             
         I tried to force usage of +right+ and it worked fine under Firefox, but
         it croaked under Chrome. I decided it was better to go this route in the end,
         even though it makes the stylesheets a little more confusing (since they assign
         +right+ to begin with) and adds a small amount of JS overhead. Using +left+
         at the outset isn't an option because we don't initially know the bounds of
         the +content+ div.
       */
      function recalculate_sidebar_bounds()
      {
//        $('sidebar').style.right = "5px";
//        $('sidebar').style.left = "auto";
        $('sidebar').style.left = ($('content').getDimensions().width+10)+"px";
        $('sidebar').style.right = 'auto';
      }
      
      /*
        When called, this function will cause the sidebar to collapse or expand, thus
        moving it out of the way to reduce clutter and recalling it when needed.
       */
      function toggleSidebar()
      {
        if (toggleSidebar.collapsed)
        {
          new Effect.Grow('sidebar', { direction: 'top-right', afterFinish: recalculate_sidebar_bounds });
          new Effect.Morph('content', { style: 'right:205px;' });
          new Effect.Morph('collapse-sidebar', { style: 'right:205px;' });
          toggleSidebar.collapsed = false;
        }
        else
        {
          recalculate_sidebar_bounds();
          new Effect.DropOut('sidebar');//, { afterFinish: recalculate_sidebar_bounds });
          new Effect.Morph('content', { style: 'right:5px;' });
          new Effect.Morph('collapse-sidebar', { style: 'right:5px;' });
          toggleSidebar.collapsed = true;
        }
      }
      
      /*
        This function calculates the height and top position of the sidebar,
        compares that to the size and scroll offsets of the window, and
        repositions the sidebar accordingly. This is because, since the sidebar
        is positioned using position:fixed, it is impossible for the user to
        scroll down within the sidebar if it's too long for the window. Rather
        than add a nested div with overflow:auto, which is ugly, I decided to
        go this route. This way the user can scroll down but won't ever scroll
        past the end of the sidebar. This reduces the amount of wasted space and
        prevents the user from having to scroll back up to use the sidebar.
       */
      var window_scrolled = function(evt)
      {
        var window_height = (document.viewport.getDimensions().height);
        var sidebar_height = ($('sidebar').getHeight());
        var sidebar_top = $('sidebar').cumulativeOffset().top;
        var origin = 5;
        var scroll = document.viewport.getScrollOffsets().top;
        
        sidebar_top = origin;
        if (window_height < sidebar_height)
        {
          sidebar_top -= scroll;
          
          if (window_height - sidebar_top > sidebar_height)
            sidebar_top = -(sidebar_height - window_height);
        }

        $('sidebar').style.top = sidebar_top+"px";
        $('sidebar-scroll-mirror').style.height = sidebar_height+"px";
        recalculate_sidebar_bounds();
      }
      
      Event.observe(window, 'scroll', window_scrolled);
      Event.observe(window, 'resize', window_scrolled);
      Event.observe(window, 'load',   window_scrolled); // mostly just to populate $("sidebar-scroll-mirror")
    </script>
    <%=yield :head%>
  </head>

  <body>
    <div id="content">
      <div id="sidebar">
        <%SIDEBARS.each do |sidebar|%>
          <div class='sidebar_item'>
            <div class='top'></div>
            <div class='content'>
              <div id="<%=sidebar%>">
                <%=render :partial => "sidebars/#{sidebar}"%>
              </div>
            </div>
            <div class='bottom'></div>
          </div>
        <%end%>
      </div>

      <div id="border-top-left">&nbsp;</div>
      <div id="border-top-right">&nbsp;</div>
      <div id="border-top-middle">&nbsp;</div>
      
      <div id="collapse-sidebar" onclick="toggleSidebar();"></div>
      
      <div id="inner-content">
        <div id="inner-top-content">
          <div id="post-info">
            <div id="titlebar">
              <%if title = yield(:title)%>
                <span id="gohome">
                  <a href='/'>TiC</a>
                </span>
                <%=title%>
              <%else%>
                <span id="blog_name_link">
                  <%=link_to blog.name, root_path%>
                  <%if permitted_to? :edit, :blogs%>
                    [<%=link_to_function "edit", "Element.toggle('blog_name_link');Element.toggle('blog_name_form');"%>]
                  <%end%>
                </span>
                <span id="blog_owner">
                  with <%=link_to blog.owner.name, author_path%>
                </span>
                <%if permitted_to? :edit, :blogs%>
                  <span id="blog_name_form" style='display:none;'>
                    <%form_for blog do |f|%>
                      <%=f.text_field :name%>
                      <%=f.submit%>
                    <%end%>
                  </span>
                <%end%>
              <%end%>
            </div>
            <%if content_given?(:subtitle)%>
              <div id="subtitle">
                <%=yield :subtitle%>
              </div>
            <%end%>
            <%if content_given?(:extra_info)%>
              <div id="caption">
                <%=yield :extra_info%>
              </div>
            <%end%>
          </div>
        </div>
        
        <%if content_given?(:extra_info)%><div id="spacer">&nbsp;</div><%end%>

        <div id="flash">
          <%flash.each do |name, msg|%>
            <%=content_tag :div, msg, :id => "flash_#{name}"%>
          <%end%>
        </div>

        <div id="main">
          <%=yield%>

          <%if tweetbacks?%>
            <div id="boastful-container">
              <div id="boastful" style="float:left;"></div>
              <div id="boastful2"></div>
            </div>
            <div style='clear:both;'></div>
          <%end%>
          
          <div id="post-comments">
            <%=yield :post_comments%>
          </div>
          
          <div id="post-comments-form">
            <%=yield :post_comments_form%>
          </div>
        </div>
      </div>
      
      <div id="border-bottom-left">&nbsp;</div>
      <div id="border-bottom-right">&nbsp;</div>
      <div id="border-bottom-middle">&nbsp;</div>
      <div id="fake-bottom"></div>
    </div>
  
    <div style='position:absolute;z-index:-1;top:5px;opacity:0;' id="sidebar-scroll-mirror">
      &nbsp;
      <%# This is because if the sidebar is longer than the main content, we don't get
          scrollbars using position:fixed. So we mirror it with a position:absolute
          of equal height in the background. %>
    </div>
  </body>
</html>
